#!/usr/bin/env python3
# reference: https://wiki.debian.org/DebianRepository/Format

from argparse import ArgumentParser
from requests import get
from debian.deb822 import Release, Packages
import lzma, json

parser = ArgumentParser(prog="debian")
parser.add_argument("--uri", default="https://mirrors.tuna.tsinghua.edu.cn/debian")
parser.add_argument("--distribution", default="bookworm")
parser.add_argument("--component", default="main")
parser.add_argument("--architecture", default="amd64")
parser.add_argument("--output", required=True)
args = parser.parse_args()

r = get(f"{args.uri}/dists/{args.distribution}/Release")
r.raise_for_status()

# TODO: verify gpg signature
release = Release(r.text)
assert release["Acquire-By-Hash"] == "yes"
for entry in release["SHA256"]:
    if entry["name"] == f"{args.component}/binary-{args.architecture}/Packages.xz":
        p = get(
            f"{args.uri}/dists/{args.distribution}/{args.component}/binary-{args.architecture}/by-hash/SHA256/{entry['sha256']}"
        )
        p.raise_for_status()
        packages = lzma.decompress(p.content)
        files = [
            {"filename": package["Filename"], "sha256": package["SHA256"]}
            for package in Packages.iter_paragraphs(packages, use_apt_pkg=False)
        ]
        with open(args.output, "w") as f:
            json.dump(
                {
                    "uri": args.uri,
                    "distribution": args.distribution,
                    "component": args.component,
                    "architecture": args.architecture,
                    "files": files,
                },
                f,
            )
        exit(0)

exit(1)
