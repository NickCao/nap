#!/usr/bin/env python3
# reference: https://wiki.debian.org/DebianRepository/Format

from __future__ import annotations
from argparse import ArgumentParser
from pathlib import Path
from typing import Tuple, TypedDict, Optional
import xml.etree.ElementTree as ET
import requests
import sqlite3
import gzip
import hashlib
import csv
import logging
import xml


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)

    parser = ArgumentParser(prog="yum-release")
    parser.add_argument(
        "--uri",
        default="https://mirrors.tuna.tsinghua.edu.cn/centos-stream/9-stream/BaseOS/x86_64/os",
    )
    parser.add_argument("--output", required=True)
    args = parser.parse_args()

    resp = requests.get(f"{args.uri}/repodata/repomd.xml")
    resp.raise_for_status()

    ns = {
        "repo": "http://linux.duke.edu/metadata/repo",
        "common": "http://linux.duke.edu/metadata/common",
    }
    root = ET.fromstring(resp.text)

    con = sqlite3.connect(args.output)
    cur = con.cursor()
    cur.execute("CREATE TABLE files(filename TEXT PRIMARY KEY, sha256 TEXT)")

    INSERT = "INSERT OR IGNORE INTO files VALUES (?, ?)"

    for data in root.findall("repo:data", ns):
        filetype = data.get("type")
        filename = data.find("repo:location", ns).get("href")
        checksum = data.find("repo:checksum", ns).text

        cur.execute(INSERT, (filename, checksum))

        match filetype:
            case "primary":
                resp = requests.get(f"{args.uri}/{filename}")
                resp.raise_for_status()

                primary = ET.fromstring(gzip.decompress(resp.content).decode("utf-8"))
                for package in primary.findall("common:package", ns):
                    cur.execute(
                        INSERT,
                        (
                            package.find("common:location", ns).get("href"),
                            package.find("common:checksum", ns).text,
                        ),
                    )
            case _:
                pass

    con.commit()
    con.close()
