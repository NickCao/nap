#!/usr/bin/env python3
# reference: https://wiki.debian.org/DebianRepository/Format

from argparse import ArgumentParser
from requests import get
from debian.deb822 import Release, Packages
import lzma, json

parser = ArgumentParser(prog="debian")
parser.add_argument("--uri", default="https://mirrors.tuna.tsinghua.edu.cn/debian")
parser.add_argument("--distribution", default="bookworm")
parser.add_argument("--output", required=True)
args = parser.parse_args()

r = get(f"{args.uri}/dists/{args.distribution}/Release")
r.raise_for_status()

# TODO: verify gpg signature
release = Release(r.text)
assert release["Acquire-By-Hash"] == "yes"

data = {
    "uri": args.uri,
    "distribution": args.distribution,
    "suite": release["Suite"],
    "codename": release["Codename"],
    "date": release["Date"],
    "files": [],
}

for entry in release["SHA256"]:
    for component in release["Components"].split(" "):
        for architecture in release["Architectures"].split(" "):
            if entry["name"] == f"{component}/binary-{architecture}/Packages.xz":
                data["files"].append(
                    {
                        "component": component,
                        "architecture": architecture,
                        "filename": f"dists/{args.distribution}/{component}/binary-{architecture}/by-hash/SHA256/{entry['sha256']}",
                        "sha256": entry["sha256"],
                    }
                )

with open(args.output, "w") as f:
    json.dump(data, f)
