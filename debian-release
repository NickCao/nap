#!/usr/bin/env python3
# reference: https://wiki.debian.org/DebianRepository/Format
# TODO: handle diff

from argparse import ArgumentParser
from debian.deb822 import Release, Packages
from pathlib import Path
from typing import Tuple
import requests
import sqlite3
import lzma
import hashlib

parser = ArgumentParser(prog="debian-release")
parser.add_argument("--uri", default="https://mirrors.tuna.tsinghua.edu.cn/debian")
parser.add_argument("--output", required=True)
parser.add_argument("distributions", nargs="+")
args = parser.parse_args()


def fetch(uri: str, filename: Path, sha256: str | None = None) -> Tuple[bytes, str]:
    resp = requests.get(f"{uri}/{filename}")
    resp.raise_for_status()

    hasher = hashlib.sha256()
    hasher.update(resp.content)
    digest = hasher.hexdigest()

    if (sha256 is not None) and (sha256 != digest):
        raise Exception("hash mismatch")

    return resp.content, digest


# open database connection
con = sqlite3.connect(args.output)
cur = con.cursor()
# create mapping table
cur.execute("CREATE TABLE files(filename TEXT PRIMARY KEY, sha256 TEXT)")
INSERT = "INSERT OR IGNORE INTO files VALUES (?, ?)"

for distribution in args.distributions:
    # The file "dists/$DIST/InRelease" shall contain meta-information about the distribution and checksums for the indices
    inrelease = Path("dists", distribution, "InRelease")
    r, n = fetch(args.uri, inrelease)
    cur.execute(INSERT, (str(inrelease), n))
    release = Release(r)
    # TODO: handle legacy mirrors
    assert release["Acquire-By-Hash"] == "yes"

    # handle toplevel files
    for entry in release["SHA256"]:
        fullpath = Path("dists", distribution, entry["name"])
        cur.execute(INSERT, (str(fullpath), entry["sha256"]))
        match fullpath.name:
            # already handled by their xz counterparts
            case "Packages" | "Packages.gz" | "Sources" | "Sources.gz":
                pass
            # legacy per arch Release
            case "Release":
                pass
            # installer image sums
            case "SHA256SUMS" | "MD5SUMS":
                pass
            # diff index
            case "Index":
                pass
            case "Sources.xz":
                # TODO: handle sources
                pass
            case "Packages.xz":
                byhash = fullpath.parent.joinpath("by-hash", "SHA256", entry["sha256"])
                cur.execute(INSERT, (str(byhash), entry["sha256"]))
                p, _ = fetch(args.uri, byhash, entry["SHA256"])
                data = [
                    (package["Filename"], package["SHA256"])
                    for package in Packages.iter_paragraphs(
                        lzma.decompress(p), use_apt_pkg=False
                    )
                ]
                cur.executemany(INSERT, data)
            case _:
                # "Contents" indices
                if fullpath.name.startswith("Contents"):
                    pass
                # "Translation" indices
                elif fullpath.name.startswith("Translation"):
                    pass
                # https://wiki.debian.org/DEP-11
                elif fullpath.name.startswith("Components"):
                    pass
                elif fullpath.name.startswith("icons"):
                    pass
                else:
                    raise Exception("unhandled file")
con.commit()
con.close()
